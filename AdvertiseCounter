public class AdvertiseCounter {

    /**
     * запоминаем время отключения рекламы приложения
     * из класса application
     * https://www.cy-pr.com/tools/time/
     *
     * Здесь мы включаем или выключаем показ рекламы
     * в приложении
     *
     * showAdvertise()
     *
     * проверяем переменную берем отпечаток текущего времени и сравниваем
     * 3 дня возвращаем да или нет
     *
     */
    private Context context;
    private static final String SAVED_TEXT = "interstitial_adw";
    private SharedPreferences sharedPreferences;
    private static final int MAX_TIME_ADW = 3;//adw счетчик рекламы, начинается  нуля
    private static final int MIN_TIME_ADW = 0;
    private long currentTime = System.currentTimeMillis() / 1000L;//получаем текущее время
    private long three_days = 259200L;

    public AdvertiseCounter(Context context) {
        this.context = context;
    }

    private void saveInt(int value) {
        sharedPreferences = context.getSharedPreferences(SAVED_TEXT, 0);
        SharedPreferences.Editor editor = sharedPreferences.edit();
        editor.putInt(AdvertiseCounter.SAVED_TEXT, value);
        editor.apply();
    }


    //всегда когда вызывается этот метод, число увеличивается на 1.
    public boolean loadAdvertiseCounter() {
        int count = getInt();
        if (count < MAX_TIME_ADW) {
            saveInt(++count);
            return false;
        } else {
            saveInt(MIN_TIME_ADW);
            return true;
        }
    }

    public Boolean interstitialEnabled(){
        if (showAdvertise() && loadAdvertiseCounter()){
            return true;
        }else return false;
    }

    private int getInt() {
        sharedPreferences = context.getSharedPreferences(SAVED_TEXT, Context.MODE_PRIVATE);
        return sharedPreferences.getInt(SAVED_TEXT, 0);
    }


    //сбрасываем переменную и ставим метку  на 4 дня назад
    //включаем рекламу
    public void enableADW() {
        setTimeStamp(setFourDayAgo());
    }

    //выключаем рекламу
    public void disableADW() {
        setTimeStamp(currentTime);
    }

    //получаем текущее время и отнимаем на 4 дня назад
    private Long setFourDayAgo() {
        return currentTime - 345600L;
    }


    // 1 сутки = 86400000 милисекунд, 345600000 , 1573385619, 1 минута = 60000
    //Эта настройка включает или выключает рекламку на 4 дня
    //получаем текущее время отнимаем то, которое было сохранено
    public Boolean showAdvertise() {
        // minutes = 30L three_days = 259200L
        return currentTime - getTimeStamp() >= three_days;
    }



    private Long getTimeStamp() {
        sharedPreferences = context.getSharedPreferences(Constants.TIME_STAMP_KEY, Context.MODE_PRIVATE);
        return sharedPreferences.getLong(Constants.TIME_STAMP, setFourDayAgo());
    }


    private void setTimeStamp(long time_stamp) {
        sharedPreferences = context.getSharedPreferences(Constants.TIME_STAMP_KEY, Context.MODE_PRIVATE);
        SharedPreferences.Editor editor = sharedPreferences.edit();
        editor.putLong(Constants.TIME_STAMP, time_stamp);
        editor.apply();
    }

//показывает чисо до которого отключена реклама
// https://developer.android.com/reference/java/text/SimpleDateFormat

    public String getExpirationDate() {
        Date date = new Date(getTimeStamp() * 1000L);
        @SuppressLint("SimpleDateFormat") SimpleDateFormat simpleDateFormat = new SimpleDateFormat("dd MMMM, HH:mm");
        Calendar c = Calendar.getInstance();
        c.setTime(date);
        c.add(Calendar.DATE, 3);
        return simpleDateFormat.format(c.getTime());
    }
}
