public class Fragment_News extends Fragment {

    private static final String TAG = "myLogs";
    private static final String ENTERTAINMENT = "entertainment";
    private static final String SPORT = "sports";
    private static final String HEALTH = "health";
    private static final String TECHNOLOGY = "technology";
    private static final String ARG_SECTION_NUMBER = "section_number";
    private SwipeRefreshLayout swipeContainer;
    private List<NewsPojo.Articles> articlesList;
    private RecyclerView recyclerView;
    private Adapter_News adapter;

    private ProgressBar progress_news;
    private TextView textErrorRestart;
    private CardView cardView;
    private int arg;
    private RXConnector rxConnector;
    private CompositeDisposable disposable = new CompositeDisposable();

    public static Fragment_News newInstance(int position) {
        Fragment_News fragment = new Fragment_News();
        Bundle args = new Bundle();
        args.putInt(ARG_SECTION_NUMBER, position);
        fragment.setArguments(args);

        return fragment;
    }


    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.recycler_swipe, container, false);
        viewInitialized(view);


        LinearLayoutManager layoutManager = new LinearLayoutManager(getActivity());
        recyclerView.setHasFixedSize(true);
        recyclerView.setItemViewCacheSize(20);
        recyclerView.setDrawingCacheEnabled(true);
        recyclerView.setDrawingCacheQuality(View.DRAWING_CACHE_QUALITY_HIGH);

        swipeContainer = view.findViewById(R.id.swipeContainer);


        if (getActivity() != null) {
            rxConnector = ((MyApplication) getActivity()
                    .getApplication()).getRxConnector();
            //rxConnector = new RXConnector();
        }

        recyclerView.setLayoutManager(layoutManager);

        assert getArguments() != null;
        arg = getArguments().getInt(ARG_SECTION_NUMBER);
        getNewsData();
        netWorkCheck();

        swipeContainer.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
            @Override
            public void onRefresh() {
                progress_news.setVisibility(View.VISIBLE);
                getNewsData();
                netWorkCheck();
            }
        });

        swipeContainer.setColorSchemeResources(android.R.color.holo_blue_bright,
                android.R.color.holo_green_light,
                android.R.color.holo_orange_light,
                android.R.color.holo_red_light);


        textErrorRestart.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                progress_news.setVisibility(View.VISIBLE);
                netWorkCheck();
                getNewsData();

            }
        });
        return view;
    }

    private void viewInitialized(View view) {
        cardView = view.findViewById(R.id.card_connection);
        cardView.setVisibility(View.GONE);
        progress_news = view.findViewById(R.id.progress_news);
        progress_news.setVisibility(View.VISIBLE);

        TextView textError = view.findViewById(R.id.textError);
        textError.setText(R.string.load_error);
        textErrorRestart = view.findViewById(R.id.textErrorRestart);
        textErrorRestart.setText(R.string.trainConnectionError);

        recyclerView = view.findViewById(R.id.recycler_swipe);
    }



    private String getUrl(){
        String news_url = null;
        assert getArguments() != null;
        arg = getArguments().getInt(ARG_SECTION_NUMBER);
        switch (arg) {
            case 3:
                news_url = ENTERTAINMENT;
                break;
            case 4:
                news_url = TECHNOLOGY;
                break;
            case 5:
                news_url = SPORT;
                break;
            default:
                news_url = HEALTH;
                break;
        }
        return news_url;
    }


    private void netWorkCheck() {
        if (getActivity() != null) {
            if (!NetworkChecker.isNetworkAvailable(getActivity())) {
                cardView.setVisibility(View.VISIBLE);
                swipeContainer.setRefreshing(false);

            }
        }
    }

    private void getNewsData() {
        progress_news.setVisibility(View.VISIBLE);
        disposable.add(
                rxConnector.getNewsApiInterface().getNews(getUrl(), Constants.NEWS_API_KEY)
                        .subscribeOn(Schedulers.io())
                        .observeOn(AndroidSchedulers.mainThread())
                        .subscribeWith(new DisposableSingleObserver<NewsPojo>() {
                            @Override
                            public void onSuccess(NewsPojo newsPojo) {
                                articlesList = newsPojo.articlesArrayList;
                                adapter = new Adapter_News(articlesList, getActivity());
                                recyclerView.setAdapter(adapter);
                                swipeContainer.setRefreshing(false);
                                adapter.notifyDataSetChanged();
                                progress_news.setVisibility(View.GONE);
                                cardView.setVisibility(View.GONE);

                            }

                            @Override
                            public void onError(Throwable e) {
                                Log.e(TAG, "onError: " + e.getMessage());
                                progress_news.setVisibility(View.GONE);
                                cardView.setVisibility(View.VISIBLE);
                                swipeContainer.setRefreshing(false);
                            }
                        }));
    }

    @Override
    public void onDestroy() {
        super.onDestroy();
        disposable.clear();
    }

}
